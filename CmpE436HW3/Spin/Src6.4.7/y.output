Terminals which are not used

   PREPROC
   MTYPE
   LABEL
   NON_ATOMIC


State 140 conflicts: 6 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: units

    2 units: unit
    3      | units unit

    4 unit: proc
    5     | init
    6     | claim
    7     | ltl
    8     | events
    9     | one_decl
   10     | utype
   11     | c_fcts
   12     | ns
   13     | semi
   14     | error

   15 l_par: '('

   16 r_par: ')'

   17 @1: /* empty */

   18 @2: /* empty */

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

   20 proctype: PROCTYPE
   21         | D_PROCTYPE

   22 inst: /* empty */
   23     | ACTIVE
   24     | ACTIVE '[' const_expr ']'
   25     | ACTIVE '[' NAME ']'

   26 @3: /* empty */

   27 init: INIT @3 Opt_priority body

   28 @4: /* empty */

   29 ltl: LTL optname2 @4 ltl_body

   30 ltl_body: '{' full_expr OS '}'
   31         | error

   32 @5: /* empty */

   33 claim: CLAIM optname @5 body

   34 optname: /* empty */
   35        | NAME

   36 optname2: /* empty */
   37         | NAME

   38 @6: /* empty */

   39 events: TRACE @6 body

   40 @7: /* empty */

   41 utype: TYPEDEF NAME '{' @7 decl_lst '}'

   42 nm: NAME
   43   | INAME

   44 @8: /* empty */

   45 ns: INLINE nm l_par @8 args r_par

   46 c_fcts: ccode
   47       | cstate

   48 cstate: C_STATE STRING STRING
   49       | C_TRACK STRING STRING
   50       | C_STATE STRING STRING STRING
   51       | C_TRACK STRING STRING STRING

   52 ccode: C_CODE
   53      | C_DECL

   54 cexpr: C_EXPR

   55 @9: /* empty */

   56 @10: /* empty */

   57 body: '{' @9 sequence OS @10 '}'

   58 sequence: step
   59         | sequence MS step

   60 step: one_decl
   61     | XU vref_lst
   62     | NAME ':' one_decl
   63     | NAME ':' XU
   64     | stmnt

   65 @11: /* empty */

   66 step: stmnt UNLESS @11 stmnt
   67     | error

   68 vis: /* empty */
   69    | HIDDEN
   70    | SHOW
   71    | ISLOCAL

   72 asgn: /* empty */
   73     | ASGN

   74 one_decl: vis TYPE var_list
   75         | vis UNAME var_list
   76         | vis TYPE asgn '{' nlst '}'

   77 decl_lst: one_decl
   78         | one_decl SEMI decl_lst

   79 decl: /* empty */
   80     | decl_lst

   81 vref_lst: varref
   82         | varref ',' vref_lst

   83 var_list: ivar
   84         | ivar ',' var_list

   85 c_list: CONST
   86       | CONST ',' c_list

   87 ivar: vardcl
   88     | vardcl ASGN '{' c_list '}'
   89     | vardcl ASGN expr
   90     | vardcl ASGN ch_init

   91 ch_init: '[' const_expr ']' OF '{' typ_list '}'

   92 vardcl: NAME
   93       | NAME ':' CONST
   94       | NAME '[' const_expr ']'
   95       | NAME '[' NAME ']'

   96 varref: cmpnd

   97 pfld: NAME

   98 @12: /* empty */

   99 pfld: NAME @12 '[' expr ']'

  100 @13: /* empty */

  101 cmpnd: pfld @13 sfld

  102 sfld: /* empty */
  103     | '.' cmpnd

  104 stmnt: Special
  105      | Stmnt

  106 @14: /* empty */

  107 for_pre: FOR l_par @14 varref

  108 for_post: '{' sequence OS '}'

  109 @15: /* empty */

  110 Special: varref RCV @15 rargs

  111 @16: /* empty */

  112 Special: varref SND @16 margs

  113 @17: /* empty */

  114 Special: for_pre ':' expr DOTDOT expr r_par @17 for_post

  115 @18: /* empty */

  116 Special: for_pre IN varref r_par @18 for_post
  117        | SELECT l_par varref ':' expr DOTDOT expr r_par
  118        | IF options FI

  119 @19: /* empty */

  120 Special: DO @19 options OD
  121        | BREAK
  122        | GOTO NAME
  123        | NAME ':' stmnt
  124        | NAME ':'
  125        | error

  126 Stmnt: varref ASGN full_expr
  127      | varref INCR
  128      | varref DECR
  129      | SET_P l_par two_args r_par

  130 @20: /* empty */

  131 Stmnt: PRINT l_par STRING @20 prargs r_par
  132      | PRINTM l_par varref r_par
  133      | PRINTM l_par CONST r_par
  134      | ASSERT full_expr
  135      | ccode

  136 @21: /* empty */

  137 Stmnt: varref R_RCV @21 rargs

  138 @22: /* empty */

  139 Stmnt: varref RCV @22 LT rargs GT

  140 @23: /* empty */

  141 Stmnt: varref R_RCV @23 LT rargs GT

  142 @24: /* empty */

  143 Stmnt: varref O_SND @24 margs
  144      | full_expr
  145      | ELSE

  146 @25: /* empty */

  147 Stmnt: ATOMIC '{' @25 sequence OS '}'

  148 @26: /* empty */

  149 Stmnt: D_STEP '{' @26 sequence OS '}'

  150 @27: /* empty */

  151 Stmnt: '{' @27 sequence OS '}'

  152 @28: /* empty */

  153 @29: /* empty */

  154 Stmnt: INAME @28 l_par args r_par @29 Stmnt

  155 @30: /* empty */

  156 @31: /* empty */

  157 Stmnt: varref ASGN INAME @30 l_par args r_par @31 Stmnt
  158      | RETURN full_expr

  159 options: option
  160        | option options

  161 @32: /* empty */

  162 option: SEP @32 sequence OS

  163 OS: /* empty */
  164   | semi

  165 semi: SEMI
  166     | ARROW

  167 MS: semi
  168   | MS semi

  169 aname: NAME
  170      | PNAME

  171 const_expr: CONST
  172           | '-' const_expr
  173           | l_par const_expr r_par
  174           | const_expr '+' const_expr
  175           | const_expr '-' const_expr
  176           | const_expr '*' const_expr
  177           | const_expr '/' const_expr
  178           | const_expr '%' const_expr

  179 expr: l_par expr r_par
  180     | expr '+' expr
  181     | expr '-' expr
  182     | expr '*' expr
  183     | expr '/' expr
  184     | expr '%' expr
  185     | expr '&' expr
  186     | expr '^' expr
  187     | expr '|' expr
  188     | expr GT expr
  189     | expr LT expr
  190     | expr GE expr
  191     | expr LE expr
  192     | expr EQ expr
  193     | expr NE expr
  194     | expr AND expr
  195     | expr OR expr
  196     | expr LSHIFT expr
  197     | expr RSHIFT expr
  198     | '~' expr
  199     | '-' expr
  200     | SND expr
  201     | l_par expr ARROW expr ':' expr r_par

  202 @33: /* empty */

  203 expr: RUN aname @33 l_par args r_par Opt_priority
  204     | LEN l_par varref r_par
  205     | ENABLED l_par expr r_par
  206     | GET_P l_par expr r_par

  207 @34: /* empty */

  208 expr: varref RCV @34 '[' rargs ']'

  209 @35: /* empty */

  210 expr: varref R_RCV @35 '[' rargs ']'
  211     | varref
  212     | cexpr
  213     | CONST
  214     | TIMEOUT
  215     | NONPROGRESS
  216     | PC_VAL l_par expr r_par
  217     | PNAME '[' expr ']' '@' NAME
  218     | PNAME '[' expr ']' ':' pfld
  219     | PNAME '@' NAME
  220     | PNAME ':' pfld
  221     | ltl_expr

  222 Opt_priority: /* empty */
  223             | PRIORITY CONST

  224 full_expr: expr
  225          | Expr

  226 ltl_expr: expr UNTIL expr
  227         | expr RELEASE expr
  228         | expr WEAK_UNTIL expr
  229         | expr IMPLIES expr
  230         | expr EQUIV expr
  231         | NEXT expr
  232         | ALWAYS expr
  233         | EVENTUALLY expr

  234 Expr: Probe
  235     | l_par Expr r_par
  236     | Expr AND Expr
  237     | Expr AND expr
  238     | expr AND Expr
  239     | Expr OR Expr
  240     | Expr OR expr
  241     | expr OR Expr

  242 Probe: FULL l_par varref r_par
  243      | NFULL l_par varref r_par
  244      | EMPTY l_par varref r_par
  245      | NEMPTY l_par varref r_par

  246 Opt_enabler: /* empty */
  247            | PROVIDED l_par full_expr r_par
  248            | PROVIDED error

  249 basetype: TYPE
  250         | UNAME
  251         | error

  252 typ_list: basetype
  253         | basetype ',' typ_list

  254 two_args: expr ',' expr

  255 args: /* empty */
  256     | arg

  257 prargs: /* empty */
  258       | ',' arg

  259 margs: arg
  260      | expr l_par arg r_par

  261 arg: expr
  262    | expr ',' arg

  263 rarg: varref
  264     | EVAL l_par expr r_par
  265     | CONST
  266     | '-' CONST

  267 rargs: rarg
  268      | rarg ',' rargs
  269      | rarg l_par rargs r_par
  270      | l_par rargs r_par

  271 nlst: NAME
  272     | nlst NAME
  273     | nlst ','


Terminals, with rules where they appear

$end (0) 0
'%' (37) 178 184
'&' (38) 185
'(' (40) 15
')' (41) 16
'*' (42) 176 182
'+' (43) 174 180
',' (44) 82 84 86 253 254 258 262 268 273
'-' (45) 172 175 181 199 266
'.' (46) 103
'/' (47) 177 183
':' (58) 62 63 93 114 117 123 124 201 218 220
'@' (64) 217 219
'[' (91) 24 25 91 94 95 99 208 210 217 218
']' (93) 24 25 91 94 95 99 208 210 217 218
'^' (94) 186
'{' (123) 30 41 57 76 88 91 108 147 149 151
'|' (124) 187
'}' (125) 30 41 57 76 88 91 108 147 149 151
'~' (126) 198
error (256) 14 31 67 125 248 251
ASSERT (258) 134
PRINT (259) 131
PRINTM (260) 132 133
PREPROC (261)
C_CODE (262) 52
C_DECL (263) 53
C_EXPR (264) 54
C_STATE (265) 48 50
C_TRACK (266) 49 51
RUN (267) 203
LEN (268) 204
ENABLED (269) 205
SET_P (270) 129
GET_P (271) 206
EVAL (272) 264
PC_VAL (273) 216
TYPEDEF (274) 41
MTYPE (275)
INLINE (276) 45
RETURN (277) 158
LABEL (278)
OF (279) 91
GOTO (280) 122
BREAK (281) 121
ELSE (282) 145
SEMI (283) 78 165
ARROW (284) 166 201
IF (285) 118
FI (286) 118
DO (287) 120
OD (288) 120
FOR (289) 107
SELECT (290) 117
IN (291) 116
SEP (292) 162
DOTDOT (293) 114 117
ATOMIC (294) 147
NON_ATOMIC (295)
D_STEP (296) 149
UNLESS (297) 66
TIMEOUT (298) 214
NONPROGRESS (299) 215
ACTIVE (300) 23 24 25
PROCTYPE (301) 20
D_PROCTYPE (302) 21
HIDDEN (303) 69
SHOW (304) 70
ISLOCAL (305) 71
PRIORITY (306) 223
PROVIDED (307) 247 248
FULL (308) 242
EMPTY (309) 244
NFULL (310) 243
NEMPTY (311) 245
CONST (312) 85 86 93 133 171 213 223 265 266
TYPE (313) 74 76 249
XU (314) 61 63
NAME (315) 19 25 35 37 41 42 62 63 92 93 94 95 97 99 122 123 124 169
    217 219 271 272
UNAME (316) 75 250
PNAME (317) 170 217 218 219 220
INAME (318) 43 154 157
STRING (319) 48 49 50 51 131
CLAIM (320) 33
TRACE (321) 39
INIT (322) 27
LTL (323) 29
ASGN (324) 73 88 89 90 126 157
R_RCV (325) 137 141 210
RCV (326) 110 139 208
O_SND (327) 143
SND (328) 112 200
EQUIV (329) 230
IMPLIES (330) 229
OR (331) 195 239 240 241
AND (332) 194 236 237 238
EVENTUALLY (333) 233
ALWAYS (334) 232
RELEASE (335) 227
WEAK_UNTIL (336) 228
UNTIL (337) 226
NEXT (338) 231
NE (339) 193
EQ (340) 192
LE (341) 191
GE (342) 190
LT (343) 139 141 189
GT (344) 139 141 188
RSHIFT (345) 197
LSHIFT (346) 196
DECR (347) 128
INCR (348) 127
NEG (349)
UMIN (350)
DOT (351)


Nonterminals, with rules where they appear

$accept (116)
    on left: 0
program (117)
    on left: 1, on right: 0
units (118)
    on left: 2 3, on right: 1 3
unit (119)
    on left: 4 5 6 7 8 9 10 11 12 13 14, on right: 2 3
l_par (120)
    on left: 15, on right: 19 45 107 117 129 131 132 133 154 157 173
    179 201 203 204 205 206 216 235 242 243 244 245 247 260 264 269
    270
r_par (121)
    on left: 16, on right: 19 45 114 116 117 129 131 132 133 154 157
    173 179 201 203 204 205 206 216 235 242 243 244 245 247 260 264
    269 270
proc (122)
    on left: 19, on right: 4
@1 (123)
    on left: 17, on right: 19
@2 (124)
    on left: 18, on right: 19
proctype (125)
    on left: 20 21, on right: 19
inst (126)
    on left: 22 23 24 25, on right: 19
init (127)
    on left: 27, on right: 5
@3 (128)
    on left: 26, on right: 27
ltl (129)
    on left: 29, on right: 7
@4 (130)
    on left: 28, on right: 29
ltl_body (131)
    on left: 30 31, on right: 29
claim (132)
    on left: 33, on right: 6
@5 (133)
    on left: 32, on right: 33
optname (134)
    on left: 34 35, on right: 33
optname2 (135)
    on left: 36 37, on right: 29
events (136)
    on left: 39, on right: 8
@6 (137)
    on left: 38, on right: 39
utype (138)
    on left: 41, on right: 10
@7 (139)
    on left: 40, on right: 41
nm (140)
    on left: 42 43, on right: 45
ns (141)
    on left: 45, on right: 12
@8 (142)
    on left: 44, on right: 45
c_fcts (143)
    on left: 46 47, on right: 11
cstate (144)
    on left: 48 49 50 51, on right: 47
ccode (145)
    on left: 52 53, on right: 46 135
cexpr (146)
    on left: 54, on right: 212
body (147)
    on left: 57, on right: 19 27 33 39
@9 (148)
    on left: 55, on right: 57
@10 (149)
    on left: 56, on right: 57
sequence (150)
    on left: 58 59, on right: 57 59 108 147 149 151 162
step (151)
    on left: 60 61 62 63 64 66 67, on right: 58 59
@11 (152)
    on left: 65, on right: 66
vis (153)
    on left: 68 69 70 71, on right: 74 75 76
asgn (154)
    on left: 72 73, on right: 76
one_decl (155)
    on left: 74 75 76, on right: 9 60 62 77 78
decl_lst (156)
    on left: 77 78, on right: 41 78 80
decl (157)
    on left: 79 80, on right: 19
vref_lst (158)
    on left: 81 82, on right: 61 82
var_list (159)
    on left: 83 84, on right: 74 75 84
c_list (160)
    on left: 85 86, on right: 86 88
ivar (161)
    on left: 87 88 89 90, on right: 83 84
ch_init (162)
    on left: 91, on right: 90
vardcl (163)
    on left: 92 93 94 95, on right: 87 88 89 90
varref (164)
    on left: 96, on right: 81 82 107 110 112 116 117 126 127 128 132
    137 139 141 143 157 204 208 210 211 242 243 244 245 263
pfld (165)
    on left: 97 99, on right: 101 218 220
@12 (166)
    on left: 98, on right: 99
cmpnd (167)
    on left: 101, on right: 96 103
@13 (168)
    on left: 100, on right: 101
sfld (169)
    on left: 102 103, on right: 101
stmnt (170)
    on left: 104 105, on right: 64 66 123
for_pre (171)
    on left: 107, on right: 114 116
@14 (172)
    on left: 106, on right: 107
for_post (173)
    on left: 108, on right: 114 116
Special (174)
    on left: 110 112 114 116 117 118 120 121 122 123 124 125,
    on right: 104
@15 (175)
    on left: 109, on right: 110
@16 (176)
    on left: 111, on right: 112
@17 (177)
    on left: 113, on right: 114
@18 (178)
    on left: 115, on right: 116
@19 (179)
    on left: 119, on right: 120
Stmnt (180)
    on left: 126 127 128 129 131 132 133 134 135 137 139 141 143 144
    145 147 149 151 154 157 158, on right: 105 154 157
@20 (181)
    on left: 130, on right: 131
@21 (182)
    on left: 136, on right: 137
@22 (183)
    on left: 138, on right: 139
@23 (184)
    on left: 140, on right: 141
@24 (185)
    on left: 142, on right: 143
@25 (186)
    on left: 146, on right: 147
@26 (187)
    on left: 148, on right: 149
@27 (188)
    on left: 150, on right: 151
@28 (189)
    on left: 152, on right: 154
@29 (190)
    on left: 153, on right: 154
@30 (191)
    on left: 155, on right: 157
@31 (192)
    on left: 156, on right: 157
options (193)
    on left: 159 160, on right: 118 120 160
option (194)
    on left: 162, on right: 159 160
@32 (195)
    on left: 161, on right: 162
OS (196)
    on left: 163 164, on right: 30 57 108 147 149 151 162
semi (197)
    on left: 165 166, on right: 13 164 167 168
MS (198)
    on left: 167 168, on right: 59 168
aname (199)
    on left: 169 170, on right: 203
const_expr (200)
    on left: 171 172 173 174 175 176 177 178, on right: 24 91 94 172
    173 174 175 176 177 178
expr (201)
    on left: 179 180 181 182 183 184 185 186 187 188 189 190 191 192
    193 194 195 196 197 198 199 200 201 203 204 205 206 208 210 211
    212 213 214 215 216 217 218 219 220 221, on right: 89 99 114 117
    179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194
    195 196 197 198 199 200 201 205 206 216 217 218 224 226 227 228
    229 230 231 232 233 237 238 240 241 254 260 261 262 264
@33 (202)
    on left: 202, on right: 203
@34 (203)
    on left: 207, on right: 208
@35 (204)
    on left: 209, on right: 210
Opt_priority (205)
    on left: 222 223, on right: 19 27 203
full_expr (206)
    on left: 224 225, on right: 30 126 134 144 158 247
ltl_expr (207)
    on left: 226 227 228 229 230 231 232 233, on right: 221
Expr (208)
    on left: 234 235 236 237 238 239 240 241, on right: 225 235 236
    237 238 239 240 241
Probe (209)
    on left: 242 243 244 245, on right: 234
Opt_enabler (210)
    on left: 246 247 248, on right: 19
basetype (211)
    on left: 249 250 251, on right: 252 253
typ_list (212)
    on left: 252 253, on right: 91 253
two_args (213)
    on left: 254, on right: 129
args (214)
    on left: 255 256, on right: 45 154 157 203
prargs (215)
    on left: 257 258, on right: 131
margs (216)
    on left: 259 260, on right: 112 143
arg (217)
    on left: 261 262, on right: 256 258 259 260 262
rarg (218)
    on left: 263 264 265 266, on right: 267 268 269
rargs (219)
    on left: 267 268 269 270, on right: 110 137 139 141 208 210 268
    269 270
nlst (220)
    on left: 271 272 273, on right: 76 272 273


state 0

    0 $accept: . program $end

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 68 (vis)
    UNAME       reduce using rule 68 (vis)

    program   go to state 18
    units     go to state 19
    unit      go to state 20
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


state 1

   14 unit: error .

    $default  reduce using rule 14 (unit)


state 2

   52 ccode: C_CODE .

    $default  reduce using rule 52 (ccode)


state 3

   53 ccode: C_DECL .

    $default  reduce using rule 53 (ccode)


state 4

   48 cstate: C_STATE . STRING STRING
   50       | C_STATE . STRING STRING STRING

    STRING  shift, and go to state 35


state 5

   49 cstate: C_TRACK . STRING STRING
   51       | C_TRACK . STRING STRING STRING

    STRING  shift, and go to state 36


state 6

   41 utype: TYPEDEF . NAME '{' @7 decl_lst '}'

    NAME  shift, and go to state 37


state 7

   45 ns: INLINE . nm l_par @8 args r_par

    NAME   shift, and go to state 38
    INAME  shift, and go to state 39

    nm  go to state 40


state 8

  165 semi: SEMI .

    $default  reduce using rule 165 (semi)


state 9

  166 semi: ARROW .

    $default  reduce using rule 166 (semi)


state 10

   23 inst: ACTIVE .
   24     | ACTIVE . '[' const_expr ']'
   25     | ACTIVE . '[' NAME ']'

    '['  shift, and go to state 41

    $default  reduce using rule 23 (inst)


state 11

   69 vis: HIDDEN .

    $default  reduce using rule 69 (vis)


state 12

   70 vis: SHOW .

    $default  reduce using rule 70 (vis)


state 13

   71 vis: ISLOCAL .

    $default  reduce using rule 71 (vis)


state 14

   33 claim: CLAIM . optname @5 body

    NAME  shift, and go to state 42

    $default  reduce using rule 34 (optname)

    optname  go to state 43


state 15

   39 events: TRACE . @6 body

    $default  reduce using rule 38 (@6)

    @6  go to state 44


state 16

   27 init: INIT . @3 Opt_priority body

    $default  reduce using rule 26 (@3)

    @3  go to state 45


state 17

   29 ltl: LTL . optname2 @4 ltl_body

    NAME  shift, and go to state 46

    $default  reduce using rule 36 (optname2)

    optname2  go to state 47


state 18

    0 $accept: program . $end

    $end  shift, and go to state 48


state 19

    1 program: units .
    3 units: units . unit

    error    shift, and go to state 1
    C_CODE   shift, and go to state 2
    C_DECL   shift, and go to state 3
    C_STATE  shift, and go to state 4
    C_TRACK  shift, and go to state 5
    TYPEDEF  shift, and go to state 6
    INLINE   shift, and go to state 7
    SEMI     shift, and go to state 8
    ARROW    shift, and go to state 9
    ACTIVE   shift, and go to state 10
    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13
    CLAIM    shift, and go to state 14
    TRACE    shift, and go to state 15
    INIT     shift, and go to state 16
    LTL      shift, and go to state 17

    $end        reduce using rule 1 (program)
    PROCTYPE    reduce using rule 22 (inst)
    D_PROCTYPE  reduce using rule 22 (inst)
    TYPE        reduce using rule 68 (vis)
    UNAME       reduce using rule 68 (vis)

    unit      go to state 49
    proc      go to state 21
    inst      go to state 22
    init      go to state 23
    ltl       go to state 24
    claim     go to state 25
    events    go to state 26
    utype     go to state 27
    ns        go to state 28
    c_fcts    go to state 29
    cstate    go to state 30
    ccode     go to state 31
    vis       go to state 32
    one_decl  go to state 33
    semi      go to state 34


state 20

    2 units: unit .

    $default  reduce using rule 2 (units)


state 21

    4 unit: proc .

    $default  reduce using rule 4 (unit)


state 22

   19 proc: inst . proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    PROCTYPE    shift, and go to state 50
    D_PROCTYPE  shift, and go to state 51

    proctype  go to state 52


state 23

    5 unit: init .

    $default  reduce using rule 5 (unit)


state 24

    7 unit: ltl .

    $default  reduce using rule 7 (unit)


state 25

    6 unit: claim .

    $default  reduce using rule 6 (unit)


state 26

    8 unit: events .

    $default  reduce using rule 8 (unit)


state 27

   10 unit: utype .

    $default  reduce using rule 10 (unit)


state 28

   12 unit: ns .

    $default  reduce using rule 12 (unit)


state 29

   11 unit: c_fcts .

    $default  reduce using rule 11 (unit)


state 30

   47 c_fcts: cstate .

    $default  reduce using rule 47 (c_fcts)


state 31

   46 c_fcts: ccode .

    $default  reduce using rule 46 (c_fcts)


state 32

   74 one_decl: vis . TYPE var_list
   75         | vis . UNAME var_list
   76         | vis . TYPE asgn '{' nlst '}'

    TYPE   shift, and go to state 53
    UNAME  shift, and go to state 54


state 33

    9 unit: one_decl .

    $default  reduce using rule 9 (unit)


state 34

   13 unit: semi .

    $default  reduce using rule 13 (unit)


state 35

   48 cstate: C_STATE STRING . STRING
   50       | C_STATE STRING . STRING STRING

    STRING  shift, and go to state 55


state 36

   49 cstate: C_TRACK STRING . STRING
   51       | C_TRACK STRING . STRING STRING

    STRING  shift, and go to state 56


state 37

   41 utype: TYPEDEF NAME . '{' @7 decl_lst '}'

    '{'  shift, and go to state 57


state 38

   42 nm: NAME .

    $default  reduce using rule 42 (nm)


state 39

   43 nm: INAME .

    $default  reduce using rule 43 (nm)


state 40

   45 ns: INLINE nm . l_par @8 args r_par

    '('  shift, and go to state 58

    l_par  go to state 59


state 41

   24 inst: ACTIVE '[' . const_expr ']'
   25     | ACTIVE '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 61
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 64


state 42

   35 optname: NAME .

    $default  reduce using rule 35 (optname)


state 43

   33 claim: CLAIM optname . @5 body

    $default  reduce using rule 32 (@5)

    @5  go to state 65


state 44

   39 events: TRACE @6 . body

    '{'  shift, and go to state 66

    body  go to state 67


state 45

   27 init: INIT @3 . Opt_priority body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 222 (Opt_priority)

    Opt_priority  go to state 69


state 46

   37 optname2: NAME .

    $default  reduce using rule 37 (optname2)


state 47

   29 ltl: LTL optname2 . @4 ltl_body

    $default  reduce using rule 28 (@4)

    @4  go to state 70


state 48

    0 $accept: program $end .

    $default  accept


state 49

    3 units: units unit .

    $default  reduce using rule 3 (units)


state 50

   20 proctype: PROCTYPE .

    $default  reduce using rule 20 (proctype)


state 51

   21 proctype: D_PROCTYPE .

    $default  reduce using rule 21 (proctype)


state 52

   19 proc: inst proctype . NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    NAME  shift, and go to state 71


state 53

   74 one_decl: vis TYPE . var_list
   76         | vis TYPE . asgn '{' nlst '}'

    NAME  shift, and go to state 72
    ASGN  shift, and go to state 73

    $default  reduce using rule 72 (asgn)

    asgn      go to state 74
    var_list  go to state 75
    ivar      go to state 76
    vardcl    go to state 77


state 54

   75 one_decl: vis UNAME . var_list

    NAME  shift, and go to state 72

    var_list  go to state 78
    ivar      go to state 76
    vardcl    go to state 77


state 55

   48 cstate: C_STATE STRING STRING .
   50       | C_STATE STRING STRING . STRING

    STRING  shift, and go to state 79

    $default  reduce using rule 48 (cstate)


state 56

   49 cstate: C_TRACK STRING STRING .
   51       | C_TRACK STRING STRING . STRING

    STRING  shift, and go to state 80

    $default  reduce using rule 49 (cstate)


state 57

   41 utype: TYPEDEF NAME '{' . @7 decl_lst '}'

    $default  reduce using rule 40 (@7)

    @7  go to state 81


state 58

   15 l_par: '(' .

    $default  reduce using rule 15 (l_par)


state 59

   45 ns: INLINE nm l_par . @8 args r_par

    $default  reduce using rule 44 (@8)

    @8  go to state 82


state 60

  171 const_expr: CONST .

    $default  reduce using rule 171 (const_expr)


state 61

   25 inst: ACTIVE '[' NAME . ']'

    ']'  shift, and go to state 83


state 62

  172 const_expr: '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 84


state 63

  173 const_expr: l_par . const_expr r_par

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 85


state 64

   24 inst: ACTIVE '[' const_expr . ']'
  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 91


state 65

   33 claim: CLAIM optname @5 . body

    '{'  shift, and go to state 66

    body  go to state 92


state 66

   57 body: '{' . @9 sequence OS @10 '}'

    $default  reduce using rule 55 (@9)

    @9  go to state 93


state 67

   39 events: TRACE @6 body .

    $default  reduce using rule 39 (events)


state 68

  223 Opt_priority: PRIORITY . CONST

    CONST  shift, and go to state 94


state 69

   27 init: INIT @3 Opt_priority . body

    '{'  shift, and go to state 66

    body  go to state 95


state 70

   29 ltl: LTL optname2 @4 . ltl_body

    error  shift, and go to state 96
    '{'    shift, and go to state 97

    ltl_body  go to state 98


state 71

   19 proc: inst proctype NAME . @1 l_par decl r_par @2 Opt_priority Opt_enabler body

    $default  reduce using rule 17 (@1)

    @1  go to state 99


state 72

   92 vardcl: NAME .
   93       | NAME . ':' CONST
   94       | NAME . '[' const_expr ']'
   95       | NAME . '[' NAME ']'

    '['  shift, and go to state 100
    ':'  shift, and go to state 101

    $default  reduce using rule 92 (vardcl)


state 73

   73 asgn: ASGN .

    $default  reduce using rule 73 (asgn)


state 74

   76 one_decl: vis TYPE asgn . '{' nlst '}'

    '{'  shift, and go to state 102


state 75

   74 one_decl: vis TYPE var_list .

    $default  reduce using rule 74 (one_decl)


state 76

   83 var_list: ivar .
   84         | ivar . ',' var_list

    ','  shift, and go to state 103

    $default  reduce using rule 83 (var_list)


state 77

   87 ivar: vardcl .
   88     | vardcl . ASGN '{' c_list '}'
   89     | vardcl . ASGN expr
   90     | vardcl . ASGN ch_init

    ASGN  shift, and go to state 104

    $default  reduce using rule 87 (ivar)


state 78

   75 one_decl: vis UNAME var_list .

    $default  reduce using rule 75 (one_decl)


state 79

   50 cstate: C_STATE STRING STRING STRING .

    $default  reduce using rule 50 (cstate)


state 80

   51 cstate: C_TRACK STRING STRING STRING .

    $default  reduce using rule 51 (cstate)


state 81

   41 utype: TYPEDEF NAME '{' @7 . decl_lst '}'

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 106


state 82

   45 ns: INLINE nm l_par @8 . args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 255 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 131
    arg       go to state 132


state 83

   25 inst: ACTIVE '[' NAME ']' .

    $default  reduce using rule 25 (inst)


state 84

  172 const_expr: '-' const_expr .
  174           | const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    $default  reduce using rule 172 (const_expr)


state 85

  173 const_expr: l_par const_expr . r_par
  174           | const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ')'  shift, and go to state 133

    r_par  go to state 134


state 86

  174 const_expr: const_expr '+' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 135


state 87

  175 const_expr: const_expr '-' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 136


state 88

  176 const_expr: const_expr '*' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 137


state 89

  177 const_expr: const_expr '/' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 138


state 90

  178 const_expr: const_expr '%' . const_expr

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 139


state 91

   24 inst: ACTIVE '[' const_expr ']' .

    $default  reduce using rule 24 (inst)


state 92

   33 claim: CLAIM optname @5 body .

    $default  reduce using rule 33 (claim)


state 93

   57 body: '{' @9 . sequence OS @10 '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 165
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 94

  223 Opt_priority: PRIORITY CONST .

    $default  reduce using rule 223 (Opt_priority)


state 95

   27 init: INIT @3 Opt_priority body .

    $default  reduce using rule 27 (init)


state 96

   31 ltl_body: error .

    $default  reduce using rule 31 (ltl_body)


state 97

   30 ltl_body: '{' . full_expr OS '}'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 177
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 98

   29 ltl: LTL optname2 @4 ltl_body .

    $default  reduce using rule 29 (ltl)


state 99

   19 proc: inst proctype NAME @1 . l_par decl r_par @2 Opt_priority Opt_enabler body

    '('  shift, and go to state 58

    l_par  go to state 178


state 100

   94 vardcl: NAME '[' . const_expr ']'
   95       | NAME '[' . NAME ']'

    CONST  shift, and go to state 60
    NAME   shift, and go to state 179
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 180


state 101

   93 vardcl: NAME ':' . CONST

    CONST  shift, and go to state 181


state 102

   76 one_decl: vis TYPE asgn '{' . nlst '}'

    NAME  shift, and go to state 182

    nlst  go to state 183


state 103

   84 var_list: ivar ',' . var_list

    NAME  shift, and go to state 72

    var_list  go to state 184
    ivar      go to state 76
    vardcl    go to state 77


state 104

   88 ivar: vardcl ASGN . '{' c_list '}'
   89     | vardcl ASGN . expr
   90     | vardcl ASGN . ch_init

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '['          shift, and go to state 185
    '{'          shift, and go to state 186

    l_par     go to state 124
    cexpr     go to state 125
    ch_init   go to state 187
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 188
    ltl_expr  go to state 130


state 105

   77 decl_lst: one_decl .
   78         | one_decl . SEMI decl_lst

    SEMI  shift, and go to state 189

    $default  reduce using rule 77 (decl_lst)


state 106

   41 utype: TYPEDEF NAME '{' @7 decl_lst . '}'

    '}'  shift, and go to state 190


state 107

   54 cexpr: C_EXPR .

    $default  reduce using rule 54 (cexpr)


state 108

  203 expr: RUN . aname @33 l_par args r_par Opt_priority

    NAME   shift, and go to state 191
    PNAME  shift, and go to state 192

    aname  go to state 193


state 109

  204 expr: LEN . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 194


state 110

  205 expr: ENABLED . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 195


state 111

  206 expr: GET_P . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 196


state 112

  216 expr: PC_VAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 197


state 113

  214 expr: TIMEOUT .

    $default  reduce using rule 214 (expr)


state 114

  215 expr: NONPROGRESS .

    $default  reduce using rule 215 (expr)


state 115

  213 expr: CONST .

    $default  reduce using rule 213 (expr)


state 116

   97 pfld: NAME .
   99     | NAME . @12 '[' expr ']'

    '['       reduce using rule 98 (@12)
    $default  reduce using rule 97 (pfld)

    @12  go to state 198


state 117

  217 expr: PNAME . '[' expr ']' '@' NAME
  218     | PNAME . '[' expr ']' ':' pfld
  219     | PNAME . '@' NAME
  220     | PNAME . ':' pfld

    '['  shift, and go to state 199
    ':'  shift, and go to state 200
    '@'  shift, and go to state 201


state 118

  200 expr: SND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 202
    ltl_expr  go to state 130


state 119

  233 ltl_expr: EVENTUALLY . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 203
    ltl_expr  go to state 130


state 120

  232 ltl_expr: ALWAYS . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 204
    ltl_expr  go to state 130


state 121

  231 ltl_expr: NEXT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 205
    ltl_expr  go to state 130


state 122

  199 expr: '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 206
    ltl_expr  go to state 130


state 123

  198 expr: '~' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 207
    ltl_expr  go to state 130


state 124

  179 expr: l_par . expr r_par
  201     | l_par . expr ARROW expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 208
    ltl_expr  go to state 130


state 125

  212 expr: cexpr .

    $default  reduce using rule 212 (expr)


state 126

  208 expr: varref . RCV @34 '[' rargs ']'
  210     | varref . R_RCV @35 '[' rargs ']'
  211     | varref .

    R_RCV  shift, and go to state 209
    RCV    shift, and go to state 210

    $default  reduce using rule 211 (expr)


state 127

  101 cmpnd: pfld . @13 sfld

    $default  reduce using rule 100 (@13)

    @13  go to state 211


state 128

   96 varref: cmpnd .

    $default  reduce using rule 96 (varref)


state 129

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  261 arg: expr .
  262    | expr . ',' arg

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ','         shift, and go to state 235

    $default  reduce using rule 261 (arg)


state 130

  221 expr: ltl_expr .

    $default  reduce using rule 221 (expr)


state 131

   45 ns: INLINE nm l_par @8 args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 236


state 132

  256 args: arg .

    $default  reduce using rule 256 (args)


state 133

   16 r_par: ')' .

    $default  reduce using rule 16 (r_par)


state 134

  173 const_expr: l_par const_expr r_par .

    $default  reduce using rule 173 (const_expr)


state 135

  174 const_expr: const_expr . '+' const_expr
  174           | const_expr '+' const_expr .
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 174 (const_expr)


state 136

  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  175           | const_expr '-' const_expr .
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90

    $default  reduce using rule 175 (const_expr)


state 137

  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  176           | const_expr '*' const_expr .
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    $default  reduce using rule 176 (const_expr)


state 138

  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  177           | const_expr '/' const_expr .
  178           | const_expr . '%' const_expr

    $default  reduce using rule 177 (const_expr)


state 139

  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr
  178           | const_expr '%' const_expr .

    $default  reduce using rule 178 (const_expr)


state 140

   67 step: error .
  125 Special: error .

    SEMI      reduce using rule 67 (step)
    SEMI      [reduce using rule 125 (Special)]
    ARROW     reduce using rule 67 (step)
    ARROW     [reduce using rule 125 (Special)]
    FI        reduce using rule 67 (step)
    FI        [reduce using rule 125 (Special)]
    OD        reduce using rule 67 (step)
    OD        [reduce using rule 125 (Special)]
    SEP       reduce using rule 67 (step)
    SEP       [reduce using rule 125 (Special)]
    UNLESS    reduce using rule 125 (Special)
    '}'       reduce using rule 67 (step)
    '}'       [reduce using rule 125 (Special)]
    $default  reduce using rule 67 (step)


state 141

  134 Stmnt: ASSERT . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 237
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 142

  131 Stmnt: PRINT . l_par STRING @20 prargs r_par

    '('  shift, and go to state 58

    l_par  go to state 238


state 143

  132 Stmnt: PRINTM . l_par varref r_par
  133      | PRINTM . l_par CONST r_par

    '('  shift, and go to state 58

    l_par  go to state 239


state 144

  129 Stmnt: SET_P . l_par two_args r_par

    '('  shift, and go to state 58

    l_par  go to state 240


state 145

  158 Stmnt: RETURN . full_expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 241
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 146

  122 Special: GOTO . NAME

    NAME  shift, and go to state 242


state 147

  121 Special: BREAK .

    $default  reduce using rule 121 (Special)


state 148

  145 Stmnt: ELSE .

    $default  reduce using rule 145 (Stmnt)


state 149

  118 Special: IF . options FI

    SEP  shift, and go to state 243

    options  go to state 244
    option   go to state 245


state 150

  120 Special: DO . @19 options OD

    $default  reduce using rule 119 (@19)

    @19  go to state 246


state 151

  107 for_pre: FOR . l_par @14 varref

    '('  shift, and go to state 58

    l_par  go to state 247


state 152

  117 Special: SELECT . l_par varref ':' expr DOTDOT expr r_par

    '('  shift, and go to state 58

    l_par  go to state 248


state 153

  147 Stmnt: ATOMIC . '{' @25 sequence OS '}'

    '{'  shift, and go to state 249


state 154

  149 Stmnt: D_STEP . '{' @26 sequence OS '}'

    '{'  shift, and go to state 250


state 155

  242 Probe: FULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 251


state 156

  244 Probe: EMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 252


state 157

  243 Probe: NFULL . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 253


state 158

  245 Probe: NEMPTY . l_par varref r_par

    '('  shift, and go to state 58

    l_par  go to state 254


state 159

   61 step: XU . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 255
    varref    go to state 256
    pfld      go to state 127
    cmpnd     go to state 128


state 160

   62 step: NAME . ':' one_decl
   63     | NAME . ':' XU
   97 pfld: NAME .
   99     | NAME . @12 '[' expr ']'
  123 Special: NAME . ':' stmnt
  124        | NAME . ':'

    ':'  shift, and go to state 257

    '['       reduce using rule 98 (@12)
    $default  reduce using rule 97 (pfld)

    @12  go to state 198


state 161

  154 Stmnt: INAME . @28 l_par args r_par @29 Stmnt

    $default  reduce using rule 152 (@28)

    @28  go to state 258


state 162

  151 Stmnt: '{' . @27 sequence OS '}'

    $default  reduce using rule 150 (@27)

    @27  go to state 259


state 163

  179 expr: l_par . expr r_par
  201     | l_par . expr ARROW expr ':' expr r_par
  235 Expr: l_par . Expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 260
    ltl_expr  go to state 130
    Expr      go to state 261
    Probe     go to state 176


state 164

  135 Stmnt: ccode .

    $default  reduce using rule 135 (Stmnt)


state 165

   57 body: '{' @9 sequence . OS @10 '}'
   59 sequence: sequence . MS step

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 262
    semi  go to state 263
    MS    go to state 264


state 166

   58 sequence: step .

    $default  reduce using rule 58 (sequence)


state 167

   60 step: one_decl .

    $default  reduce using rule 60 (step)


state 168

  110 Special: varref . RCV @15 rargs
  112        | varref . SND @16 margs
  126 Stmnt: varref . ASGN full_expr
  127      | varref . INCR
  128      | varref . DECR
  137      | varref . R_RCV @21 rargs
  139      | varref . RCV @22 LT rargs GT
  141      | varref . R_RCV @23 LT rargs GT
  143      | varref . O_SND @24 margs
  157      | varref . ASGN INAME @30 l_par args r_par @31 Stmnt
  208 expr: varref . RCV @34 '[' rargs ']'
  210     | varref . R_RCV @35 '[' rargs ']'
  211     | varref .

    ASGN   shift, and go to state 265
    R_RCV  shift, and go to state 266
    RCV    shift, and go to state 267
    O_SND  shift, and go to state 268
    SND    shift, and go to state 269
    DECR   shift, and go to state 270
    INCR   shift, and go to state 271

    $default  reduce using rule 211 (expr)


state 169

   64 step: stmnt .
   66     | stmnt . UNLESS @11 stmnt

    UNLESS  shift, and go to state 272

    $default  reduce using rule 64 (step)


state 170

  114 Special: for_pre . ':' expr DOTDOT expr r_par @17 for_post
  116        | for_pre . IN varref r_par @18 for_post

    IN   shift, and go to state 273
    ':'  shift, and go to state 274


state 171

  104 stmnt: Special .

    $default  reduce using rule 104 (stmnt)


state 172

  105 stmnt: Stmnt .

    $default  reduce using rule 105 (stmnt)


state 173

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  224 full_expr: expr .
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  238 Expr: expr . AND Expr
  241     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 275
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 224 (full_expr)


state 174

  144 Stmnt: full_expr .

    $default  reduce using rule 144 (Stmnt)


state 175

  225 full_expr: Expr .
  236 Expr: Expr . AND Expr
  237     | Expr . AND expr
  239     | Expr . OR Expr
  240     | Expr . OR expr

    OR   shift, and go to state 277
    AND  shift, and go to state 278

    $default  reduce using rule 225 (full_expr)


state 176

  234 Expr: Probe .

    $default  reduce using rule 234 (Expr)


state 177

   30 ltl_body: '{' full_expr . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 279
    semi  go to state 280


state 178

   19 proc: inst proctype NAME @1 l_par . decl r_par @2 Opt_priority Opt_enabler body

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    ')'       reduce using rule 79 (decl)
    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 281
    decl      go to state 282


state 179

   95 vardcl: NAME '[' NAME . ']'

    ']'  shift, and go to state 283


state 180

   94 vardcl: NAME '[' const_expr . ']'
  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 284


state 181

   93 vardcl: NAME ':' CONST .

    $default  reduce using rule 93 (vardcl)


state 182

  271 nlst: NAME .

    $default  reduce using rule 271 (nlst)


state 183

   76 one_decl: vis TYPE asgn '{' nlst . '}'
  272 nlst: nlst . NAME
  273     | nlst . ','

    NAME  shift, and go to state 285
    '}'   shift, and go to state 286
    ','   shift, and go to state 287


state 184

   84 var_list: ivar ',' var_list .

    $default  reduce using rule 84 (var_list)


state 185

   91 ch_init: '[' . const_expr ']' OF '{' typ_list '}'

    CONST  shift, and go to state 60
    '-'    shift, and go to state 62
    '('    shift, and go to state 58

    l_par       go to state 63
    const_expr  go to state 288


state 186

   88 ivar: vardcl ASGN '{' . c_list '}'

    CONST  shift, and go to state 289

    c_list  go to state 290


state 187

   90 ivar: vardcl ASGN ch_init .

    $default  reduce using rule 90 (ivar)


state 188

   89 ivar: vardcl ASGN expr .
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 89 (ivar)


state 189

   78 decl_lst: one_decl SEMI . decl_lst

    HIDDEN   shift, and go to state 11
    SHOW     shift, and go to state 12
    ISLOCAL  shift, and go to state 13

    $default  reduce using rule 68 (vis)

    vis       go to state 32
    one_decl  go to state 105
    decl_lst  go to state 291


state 190

   41 utype: TYPEDEF NAME '{' @7 decl_lst '}' .

    $default  reduce using rule 41 (utype)


state 191

  169 aname: NAME .

    $default  reduce using rule 169 (aname)


state 192

  170 aname: PNAME .

    $default  reduce using rule 170 (aname)


state 193

  203 expr: RUN aname . @33 l_par args r_par Opt_priority

    $default  reduce using rule 202 (@33)

    @33  go to state 292


state 194

  204 expr: LEN l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 293
    pfld    go to state 127
    cmpnd   go to state 128


state 195

  205 expr: ENABLED l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 294
    ltl_expr  go to state 130


state 196

  206 expr: GET_P l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 295
    ltl_expr  go to state 130


state 197

  216 expr: PC_VAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 296
    ltl_expr  go to state 130


state 198

   99 pfld: NAME @12 . '[' expr ']'

    '['  shift, and go to state 297


state 199

  217 expr: PNAME '[' . expr ']' '@' NAME
  218     | PNAME '[' . expr ']' ':' pfld

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 298
    ltl_expr  go to state 130


state 200

  220 expr: PNAME ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 299


state 201

  219 expr: PNAME '@' . NAME

    NAME  shift, and go to state 300


state 202

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  200     | SND expr .
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 200 (expr)


state 203

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  233         | EVENTUALLY expr .

    $default  reduce using rule 233 (ltl_expr)


state 204

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  232         | ALWAYS expr .

    $default  reduce using rule 232 (ltl_expr)


state 205

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  231         | NEXT expr .

    $default  reduce using rule 231 (ltl_expr)


state 206

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  199     | '-' expr .
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 199 (expr)


state 207

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  198     | '~' expr .
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 198 (expr)


state 208

  179 expr: l_par expr . r_par
  180     | expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  201     | l_par expr . ARROW expr ':' expr r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    ARROW       shift, and go to state 301
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 302


state 209

  210 expr: varref R_RCV . @35 '[' rargs ']'

    $default  reduce using rule 209 (@35)

    @35  go to state 303


state 210

  208 expr: varref RCV . @34 '[' rargs ']'

    $default  reduce using rule 207 (@34)

    @34  go to state 304


state 211

  101 cmpnd: pfld @13 . sfld

    '.'  shift, and go to state 305

    $default  reduce using rule 102 (sfld)

    sfld  go to state 306


state 212

  230 ltl_expr: expr EQUIV . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 307
    ltl_expr  go to state 130


state 213

  229 ltl_expr: expr IMPLIES . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 308
    ltl_expr  go to state 130


state 214

  195 expr: expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 309
    ltl_expr  go to state 130


state 215

  194 expr: expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 310
    ltl_expr  go to state 130


state 216

  227 ltl_expr: expr RELEASE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 311
    ltl_expr  go to state 130


state 217

  228 ltl_expr: expr WEAK_UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 312
    ltl_expr  go to state 130


state 218

  226 ltl_expr: expr UNTIL . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 313
    ltl_expr  go to state 130


state 219

  187 expr: expr '|' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 314
    ltl_expr  go to state 130


state 220

  186 expr: expr '^' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 315
    ltl_expr  go to state 130


state 221

  185 expr: expr '&' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 316
    ltl_expr  go to state 130


state 222

  193 expr: expr NE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 317
    ltl_expr  go to state 130


state 223

  192 expr: expr EQ . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 318
    ltl_expr  go to state 130


state 224

  191 expr: expr LE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 319
    ltl_expr  go to state 130


state 225

  190 expr: expr GE . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 320
    ltl_expr  go to state 130


state 226

  189 expr: expr LT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 321
    ltl_expr  go to state 130


state 227

  188 expr: expr GT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 322
    ltl_expr  go to state 130


state 228

  197 expr: expr RSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 323
    ltl_expr  go to state 130


state 229

  196 expr: expr LSHIFT . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 324
    ltl_expr  go to state 130


state 230

  180 expr: expr '+' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 325
    ltl_expr  go to state 130


state 231

  181 expr: expr '-' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 326
    ltl_expr  go to state 130


state 232

  182 expr: expr '*' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 327
    ltl_expr  go to state 130


state 233

  183 expr: expr '/' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 328
    ltl_expr  go to state 130


state 234

  184 expr: expr '%' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 329
    ltl_expr  go to state 130


state 235

  262 arg: expr ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 330


state 236

   45 ns: INLINE nm l_par @8 args r_par .

    $default  reduce using rule 45 (ns)


state 237

  134 Stmnt: ASSERT full_expr .

    $default  reduce using rule 134 (Stmnt)


state 238

  131 Stmnt: PRINT l_par . STRING @20 prargs r_par

    STRING  shift, and go to state 331


state 239

  132 Stmnt: PRINTM l_par . varref r_par
  133      | PRINTM l_par . CONST r_par

    CONST  shift, and go to state 332
    NAME   shift, and go to state 116

    varref  go to state 333
    pfld    go to state 127
    cmpnd   go to state 128


state 240

  129 Stmnt: SET_P l_par . two_args r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 334
    ltl_expr  go to state 130
    two_args  go to state 335


state 241

  158 Stmnt: RETURN full_expr .

    $default  reduce using rule 158 (Stmnt)


state 242

  122 Special: GOTO NAME .

    $default  reduce using rule 122 (Special)


state 243

  162 option: SEP . @32 sequence OS

    $default  reduce using rule 161 (@32)

    @32  go to state 336


state 244

  118 Special: IF options . FI

    FI  shift, and go to state 337


state 245

  159 options: option .
  160        | option . options

    SEP  shift, and go to state 243

    $default  reduce using rule 159 (options)

    options  go to state 338
    option   go to state 245


state 246

  120 Special: DO @19 . options OD

    SEP  shift, and go to state 243

    options  go to state 339
    option   go to state 245


state 247

  107 for_pre: FOR l_par . @14 varref

    $default  reduce using rule 106 (@14)

    @14  go to state 340


state 248

  117 Special: SELECT l_par . varref ':' expr DOTDOT expr r_par

    NAME  shift, and go to state 116

    varref  go to state 341
    pfld    go to state 127
    cmpnd   go to state 128


state 249

  147 Stmnt: ATOMIC '{' . @25 sequence OS '}'

    $default  reduce using rule 146 (@25)

    @25  go to state 342


state 250

  149 Stmnt: D_STEP '{' . @26 sequence OS '}'

    $default  reduce using rule 148 (@26)

    @26  go to state 343


state 251

  242 Probe: FULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 344
    pfld    go to state 127
    cmpnd   go to state 128


state 252

  244 Probe: EMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 345
    pfld    go to state 127
    cmpnd   go to state 128


state 253

  243 Probe: NFULL l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 346
    pfld    go to state 127
    cmpnd   go to state 128


state 254

  245 Probe: NEMPTY l_par . varref r_par

    NAME  shift, and go to state 116

    varref  go to state 347
    pfld    go to state 127
    cmpnd   go to state 128


state 255

   61 step: XU vref_lst .

    $default  reduce using rule 61 (step)


state 256

   81 vref_lst: varref .
   82         | varref . ',' vref_lst

    ','  shift, and go to state 348

    $default  reduce using rule 81 (vref_lst)


state 257

   62 step: NAME ':' . one_decl
   63     | NAME ':' . XU
  123 Special: NAME ':' . stmnt
  124        | NAME ':' .

    error        shift, and go to state 349
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 350
    NAME         shift, and go to state 351
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 124 (Special)
    ARROW   reduce using rule 124 (Special)
    FI      reduce using rule 124 (Special)
    OD      reduce using rule 124 (Special)
    SEP     reduce using rule 124 (Special)
    UNLESS  reduce using rule 124 (Special)
    TYPE    reduce using rule 68 (vis)
    UNAME   reduce using rule 68 (vis)
    '}'     reduce using rule 124 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    vis        go to state 32
    one_decl   go to state 352
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 353
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 258

  154 Stmnt: INAME @28 . l_par args r_par @29 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 354


state 259

  151 Stmnt: '{' @27 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 355
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 260

  179 expr: l_par expr . r_par
  180     | expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  201     | l_par expr . ARROW expr ':' expr r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  238 Expr: expr . AND Expr
  241     | expr . OR Expr

    ARROW       shift, and go to state 301
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 275
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 302


state 261

  235 Expr: l_par Expr . r_par
  236     | Expr . AND Expr
  237     | Expr . AND expr
  239     | Expr . OR Expr
  240     | Expr . OR expr

    OR   shift, and go to state 277
    AND  shift, and go to state 278
    ')'  shift, and go to state 133

    r_par  go to state 356


state 262

   57 body: '{' @9 sequence OS . @10 '}'

    $default  reduce using rule 56 (@10)

    @10  go to state 357


state 263

  164 OS: semi .
  167 MS: semi .

    FI        reduce using rule 164 (OS)
    OD        reduce using rule 164 (OS)
    SEP       reduce using rule 164 (OS)
    '}'       reduce using rule 164 (OS)
    $default  reduce using rule 167 (MS)


state 264

   59 sequence: sequence MS . step
  168 MS: MS . semi

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    SEMI         shift, and go to state 8
    ARROW        shift, and go to state 9
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    step       go to state 358
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    semi       go to state 359
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 265

  126 Stmnt: varref ASGN . full_expr
  157      | varref ASGN . INAME @30 l_par args r_par @31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 360
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 361
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 266

  137 Stmnt: varref R_RCV . @21 rargs
  141      | varref R_RCV . @23 LT rargs GT
  210 expr: varref R_RCV . @35 '[' rargs ']'

    LT        reduce using rule 140 (@23)
    '['       reduce using rule 209 (@35)
    $default  reduce using rule 136 (@21)

    @21  go to state 362
    @23  go to state 363
    @35  go to state 303


state 267

  110 Special: varref RCV . @15 rargs
  139 Stmnt: varref RCV . @22 LT rargs GT
  208 expr: varref RCV . @34 '[' rargs ']'

    LT        reduce using rule 138 (@22)
    '['       reduce using rule 207 (@34)
    $default  reduce using rule 109 (@15)

    @15  go to state 364
    @22  go to state 365
    @34  go to state 304


state 268

  143 Stmnt: varref O_SND . @24 margs

    $default  reduce using rule 142 (@24)

    @24  go to state 366


state 269

  112 Special: varref SND . @16 margs

    $default  reduce using rule 111 (@16)

    @16  go to state 367


state 270

  128 Stmnt: varref DECR .

    $default  reduce using rule 128 (Stmnt)


state 271

  127 Stmnt: varref INCR .

    $default  reduce using rule 127 (Stmnt)


state 272

   66 step: stmnt UNLESS . @11 stmnt

    $default  reduce using rule 65 (@11)

    @11  go to state 368


state 273

  116 Special: for_pre IN . varref r_par @18 for_post

    NAME  shift, and go to state 116

    varref  go to state 369
    pfld    go to state 127
    cmpnd   go to state 128


state 274

  114 Special: for_pre ':' . expr DOTDOT expr r_par @17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 370
    ltl_expr  go to state 130


state 275

  195 expr: expr OR . expr
  241 Expr: expr OR . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 371
    ltl_expr  go to state 130
    Expr      go to state 372
    Probe     go to state 176


state 276

  194 expr: expr AND . expr
  238 Expr: expr AND . Expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 373
    ltl_expr  go to state 130
    Expr      go to state 374
    Probe     go to state 176


state 277

  239 Expr: Expr OR . Expr
  240     | Expr OR . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 375
    ltl_expr  go to state 130
    Expr      go to state 376
    Probe     go to state 176


state 278

  236 Expr: Expr AND . Expr
  237     | Expr AND . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 163
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 377
    ltl_expr  go to state 130
    Expr      go to state 378
    Probe     go to state 176


state 279

   30 ltl_body: '{' full_expr OS . '}'

    '}'  shift, and go to state 379


state 280

  164 OS: semi .

    $default  reduce using rule 164 (OS)


state 281

   80 decl: decl_lst .

    $default  reduce using rule 80 (decl)


state 282

   19 proc: inst proctype NAME @1 l_par decl . r_par @2 Opt_priority Opt_enabler body

    ')'  shift, and go to state 133

    r_par  go to state 380


state 283

   95 vardcl: NAME '[' NAME ']' .

    $default  reduce using rule 95 (vardcl)


state 284

   94 vardcl: NAME '[' const_expr ']' .

    $default  reduce using rule 94 (vardcl)


state 285

  272 nlst: nlst NAME .

    $default  reduce using rule 272 (nlst)


state 286

   76 one_decl: vis TYPE asgn '{' nlst '}' .

    $default  reduce using rule 76 (one_decl)


state 287

  273 nlst: nlst ',' .

    $default  reduce using rule 273 (nlst)


state 288

   91 ch_init: '[' const_expr . ']' OF '{' typ_list '}'
  174 const_expr: const_expr . '+' const_expr
  175           | const_expr . '-' const_expr
  176           | const_expr . '*' const_expr
  177           | const_expr . '/' const_expr
  178           | const_expr . '%' const_expr

    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90
    ']'  shift, and go to state 381


state 289

   85 c_list: CONST .
   86       | CONST . ',' c_list

    ','  shift, and go to state 382

    $default  reduce using rule 85 (c_list)


state 290

   88 ivar: vardcl ASGN '{' c_list . '}'

    '}'  shift, and go to state 383


state 291

   78 decl_lst: one_decl SEMI decl_lst .

    $default  reduce using rule 78 (decl_lst)


state 292

  203 expr: RUN aname @33 . l_par args r_par Opt_priority

    '('  shift, and go to state 58

    l_par  go to state 384


state 293

  204 expr: LEN l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 385


state 294

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  205     | ENABLED l_par expr . r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 386


state 295

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  206     | GET_P l_par expr . r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 387


state 296

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  216     | PC_VAL l_par expr . r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 388


state 297

   99 pfld: NAME @12 '[' . expr ']'

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 389
    ltl_expr  go to state 130


state 298

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  217     | PNAME '[' expr . ']' '@' NAME
  218     | PNAME '[' expr . ']' ':' pfld
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ']'         shift, and go to state 390


state 299

  220 expr: PNAME ':' pfld .

    $default  reduce using rule 220 (expr)


state 300

  219 expr: PNAME '@' NAME .

    $default  reduce using rule 219 (expr)


state 301

  201 expr: l_par expr ARROW . expr ':' expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 391
    ltl_expr  go to state 130


state 302

  179 expr: l_par expr r_par .

    $default  reduce using rule 179 (expr)


state 303

  210 expr: varref R_RCV @35 . '[' rargs ']'

    '['  shift, and go to state 392


state 304

  208 expr: varref RCV @34 . '[' rargs ']'

    '['  shift, and go to state 393


state 305

  103 sfld: '.' . cmpnd

    NAME  shift, and go to state 116

    pfld   go to state 127
    cmpnd  go to state 394


state 306

  101 cmpnd: pfld @13 sfld .

    $default  reduce using rule 101 (cmpnd)


state 307

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  230         | expr EQUIV expr .

    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 230 (ltl_expr)


state 308

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  229         | expr IMPLIES expr .
  230         | expr . EQUIV expr

    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 229 (ltl_expr)


state 309

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  195     | expr OR expr .
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 195 (expr)


state 310

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  194     | expr AND expr .
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 194 (expr)


state 311

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  227         | expr RELEASE expr .
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 227 (ltl_expr)


state 312

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  228         | expr WEAK_UNTIL expr .
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 228 (ltl_expr)


state 313

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  226         | expr UNTIL expr .
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '|'     shift, and go to state 219
    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 226 (ltl_expr)


state 314

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  187     | expr '|' expr .
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '^'     shift, and go to state 220
    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 187 (expr)


state 315

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  186     | expr '^' expr .
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '&'     shift, and go to state 221
    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 186 (expr)


state 316

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  185     | expr '&' expr .
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    NE      shift, and go to state 222
    EQ      shift, and go to state 223
    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 185 (expr)


state 317

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  193     | expr NE expr .
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 193 (expr)


state 318

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  192     | expr EQ expr .
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    LE      shift, and go to state 224
    GE      shift, and go to state 225
    LT      shift, and go to state 226
    GT      shift, and go to state 227
    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 192 (expr)


state 319

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  191     | expr LE expr .
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 191 (expr)


state 320

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  190     | expr GE expr .
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 190 (expr)


state 321

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  189     | expr LT expr .
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 189 (expr)


state 322

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  188     | expr GT expr .
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    RSHIFT  shift, and go to state 228
    LSHIFT  shift, and go to state 229
    '+'     shift, and go to state 230
    '-'     shift, and go to state 231
    '*'     shift, and go to state 232
    '/'     shift, and go to state 233
    '%'     shift, and go to state 234

    $default  reduce using rule 188 (expr)


state 323

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  197     | expr RSHIFT expr .
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '+'  shift, and go to state 230
    '-'  shift, and go to state 231
    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 197 (expr)


state 324

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  196     | expr LSHIFT expr .
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '+'  shift, and go to state 230
    '-'  shift, and go to state 231
    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 196 (expr)


state 325

  180 expr: expr . '+' expr
  180     | expr '+' expr .
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 180 (expr)


state 326

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  181     | expr '-' expr .
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    '*'  shift, and go to state 232
    '/'  shift, and go to state 233
    '%'  shift, and go to state 234

    $default  reduce using rule 181 (expr)


state 327

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  182     | expr '*' expr .
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 182 (expr)


state 328

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  183     | expr '/' expr .
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 183 (expr)


state 329

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  184     | expr '%' expr .
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    $default  reduce using rule 184 (expr)


state 330

  262 arg: expr ',' arg .

    $default  reduce using rule 262 (arg)


state 331

  131 Stmnt: PRINT l_par STRING . @20 prargs r_par

    $default  reduce using rule 130 (@20)

    @20  go to state 395


state 332

  133 Stmnt: PRINTM l_par CONST . r_par

    ')'  shift, and go to state 133

    r_par  go to state 396


state 333

  132 Stmnt: PRINTM l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 397


state 334

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  254 two_args: expr . ',' expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ','         shift, and go to state 398


state 335

  129 Stmnt: SET_P l_par two_args . r_par

    ')'  shift, and go to state 133

    r_par  go to state 399


state 336

  162 option: SEP @32 . sequence OS

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 400
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 337

  118 Special: IF options FI .

    $default  reduce using rule 118 (Special)


state 338

  160 options: option options .

    $default  reduce using rule 160 (options)


state 339

  120 Special: DO @19 options . OD

    OD  shift, and go to state 401


state 340

  107 for_pre: FOR l_par @14 . varref

    NAME  shift, and go to state 116

    varref  go to state 402
    pfld    go to state 127
    cmpnd   go to state 128


state 341

  117 Special: SELECT l_par varref . ':' expr DOTDOT expr r_par

    ':'  shift, and go to state 403


state 342

  147 Stmnt: ATOMIC '{' @25 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 404
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 343

  149 Stmnt: D_STEP '{' @26 . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 405
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 344

  242 Probe: FULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 406


state 345

  244 Probe: EMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 407


state 346

  243 Probe: NFULL l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 408


state 347

  245 Probe: NEMPTY l_par varref . r_par

    ')'  shift, and go to state 133

    r_par  go to state 409


state 348

   82 vref_lst: varref ',' . vref_lst

    NAME  shift, and go to state 116

    vref_lst  go to state 410
    varref    go to state 256
    pfld      go to state 127
    cmpnd     go to state 128


state 349

  125 Special: error .

    $default  reduce using rule 125 (Special)


state 350

   63 step: NAME ':' XU .

    $default  reduce using rule 63 (step)


state 351

   97 pfld: NAME .
   99     | NAME . @12 '[' expr ']'
  123 Special: NAME . ':' stmnt
  124        | NAME . ':'

    ':'  shift, and go to state 411

    '['       reduce using rule 98 (@12)
    $default  reduce using rule 97 (pfld)

    @12  go to state 198


state 352

   62 step: NAME ':' one_decl .

    $default  reduce using rule 62 (step)


state 353

  123 Special: NAME ':' stmnt .

    $default  reduce using rule 123 (Special)


state 354

  154 Stmnt: INAME @28 l_par . args r_par @29 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 255 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 412
    arg       go to state 132


state 355

   59 sequence: sequence . MS step
  151 Stmnt: '{' @27 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 413
    semi  go to state 263
    MS    go to state 264


state 356

  235 Expr: l_par Expr r_par .

    $default  reduce using rule 235 (Expr)


state 357

   57 body: '{' @9 sequence OS @10 . '}'

    '}'  shift, and go to state 414


state 358

   59 sequence: sequence MS step .

    $default  reduce using rule 59 (sequence)


state 359

  168 MS: MS semi .

    $default  reduce using rule 168 (MS)


state 360

  157 Stmnt: varref ASGN INAME . @30 l_par args r_par @31 Stmnt

    $default  reduce using rule 155 (@30)

    @30  go to state 415


state 361

  126 Stmnt: varref ASGN full_expr .

    $default  reduce using rule 126 (Stmnt)


state 362

  137 Stmnt: varref R_RCV @21 . rargs

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 422


state 363

  141 Stmnt: varref R_RCV @23 . LT rargs GT

    LT  shift, and go to state 423


state 364

  110 Special: varref RCV @15 . rargs

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 424


state 365

  139 Stmnt: varref RCV @22 . LT rargs GT

    LT  shift, and go to state 425


state 366

  143 Stmnt: varref O_SND @24 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 426
    ltl_expr  go to state 130
    margs     go to state 427
    arg       go to state 428


state 367

  112 Special: varref SND @16 . margs

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 426
    ltl_expr  go to state 130
    margs     go to state 429
    arg       go to state 428


state 368

   66 step: stmnt UNLESS @11 . stmnt

    error        shift, and go to state 349
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 351
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 430
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 369

  116 Special: for_pre IN varref . r_par @18 for_post

    ')'  shift, and go to state 133

    r_par  go to state 431


state 370

  114 Special: for_pre ':' expr . DOTDOT expr r_par @17 for_post
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    DOTDOT      shift, and go to state 432
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234


state 371

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  195     | expr OR expr .
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  238 Expr: expr . AND Expr
  241     | expr . OR Expr

    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 195 (expr)


state 372

  236 Expr: Expr . AND Expr
  237     | Expr . AND expr
  239     | Expr . OR Expr
  240     | Expr . OR expr
  241     | expr OR Expr .

    AND  shift, and go to state 278

    $default  reduce using rule 241 (Expr)


state 373

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  194     | expr AND expr .
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  238 Expr: expr . AND Expr
  241     | expr . OR Expr

    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 194 (expr)


state 374

  236 Expr: Expr . AND Expr
  237     | Expr . AND expr
  238     | expr AND Expr .
  239     | Expr . OR Expr
  240     | Expr . OR expr

    $default  reduce using rule 238 (Expr)


state 375

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  238 Expr: expr . AND Expr
  240     | Expr OR expr .
  241     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    AND         shift, and go to state 276
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 240 (Expr)


state 376

  236 Expr: Expr . AND Expr
  237     | Expr . AND expr
  239     | Expr . OR Expr
  239     | Expr OR Expr .
  240     | Expr . OR expr

    AND  shift, and go to state 278

    $default  reduce using rule 239 (Expr)


state 377

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  237 Expr: Expr AND expr .
  238     | expr . AND Expr
  241     | expr . OR Expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 237 (Expr)


state 378

  236 Expr: Expr . AND Expr
  236     | Expr AND Expr .
  237     | Expr . AND expr
  239     | Expr . OR Expr
  240     | Expr . OR expr

    $default  reduce using rule 236 (Expr)


state 379

   30 ltl_body: '{' full_expr OS '}' .

    $default  reduce using rule 30 (ltl_body)


state 380

   19 proc: inst proctype NAME @1 l_par decl r_par . @2 Opt_priority Opt_enabler body

    $default  reduce using rule 18 (@2)

    @2  go to state 433


state 381

   91 ch_init: '[' const_expr ']' . OF '{' typ_list '}'

    OF  shift, and go to state 434


state 382

   86 c_list: CONST ',' . c_list

    CONST  shift, and go to state 289

    c_list  go to state 435


state 383

   88 ivar: vardcl ASGN '{' c_list '}' .

    $default  reduce using rule 88 (ivar)


state 384

  203 expr: RUN aname @33 l_par . args r_par Opt_priority

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 255 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 436
    arg       go to state 132


state 385

  204 expr: LEN l_par varref r_par .

    $default  reduce using rule 204 (expr)


state 386

  205 expr: ENABLED l_par expr r_par .

    $default  reduce using rule 205 (expr)


state 387

  206 expr: GET_P l_par expr r_par .

    $default  reduce using rule 206 (expr)


state 388

  216 expr: PC_VAL l_par expr r_par .

    $default  reduce using rule 216 (expr)


state 389

   99 pfld: NAME @12 '[' expr . ']'
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ']'         shift, and go to state 437


state 390

  217 expr: PNAME '[' expr ']' . '@' NAME
  218     | PNAME '[' expr ']' . ':' pfld

    ':'  shift, and go to state 438
    '@'  shift, and go to state 439


state 391

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  201     | l_par expr ARROW expr . ':' expr r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ':'         shift, and go to state 440


state 392

  210 expr: varref R_RCV @35 '[' . rargs ']'

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 441


state 393

  208 expr: varref RCV @34 '[' . rargs ']'

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 442


state 394

  103 sfld: '.' cmpnd .

    $default  reduce using rule 103 (sfld)


state 395

  131 Stmnt: PRINT l_par STRING @20 . prargs r_par

    ','  shift, and go to state 443

    $default  reduce using rule 257 (prargs)

    prargs  go to state 444


state 396

  133 Stmnt: PRINTM l_par CONST r_par .

    $default  reduce using rule 133 (Stmnt)


state 397

  132 Stmnt: PRINTM l_par varref r_par .

    $default  reduce using rule 132 (Stmnt)


state 398

  254 two_args: expr ',' . expr

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 445
    ltl_expr  go to state 130


state 399

  129 Stmnt: SET_P l_par two_args r_par .

    $default  reduce using rule 129 (Stmnt)


state 400

   59 sequence: sequence . MS step
  162 option: SEP @32 sequence . OS

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 446
    semi  go to state 263
    MS    go to state 264


state 401

  120 Special: DO @19 options OD .

    $default  reduce using rule 120 (Special)


state 402

  107 for_pre: FOR l_par @14 varref .

    $default  reduce using rule 107 (for_pre)


state 403

  117 Special: SELECT l_par varref ':' . expr DOTDOT expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 447
    ltl_expr  go to state 130


state 404

   59 sequence: sequence . MS step
  147 Stmnt: ATOMIC '{' @25 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 448
    semi  go to state 263
    MS    go to state 264


state 405

   59 sequence: sequence . MS step
  149 Stmnt: D_STEP '{' @26 sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 449
    semi  go to state 263
    MS    go to state 264


state 406

  242 Probe: FULL l_par varref r_par .

    $default  reduce using rule 242 (Probe)


state 407

  244 Probe: EMPTY l_par varref r_par .

    $default  reduce using rule 244 (Probe)


state 408

  243 Probe: NFULL l_par varref r_par .

    $default  reduce using rule 243 (Probe)


state 409

  245 Probe: NEMPTY l_par varref r_par .

    $default  reduce using rule 245 (Probe)


state 410

   82 vref_lst: varref ',' vref_lst .

    $default  reduce using rule 82 (vref_lst)


state 411

  123 Special: NAME ':' . stmnt
  124        | NAME ':' .

    error        shift, and go to state 349
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 351
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    SEMI    reduce using rule 124 (Special)
    ARROW   reduce using rule 124 (Special)
    FI      reduce using rule 124 (Special)
    OD      reduce using rule 124 (Special)
    SEP     reduce using rule 124 (Special)
    UNLESS  reduce using rule 124 (Special)
    '}'     reduce using rule 124 (Special)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 353
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 412

  154 Stmnt: INAME @28 l_par args . r_par @29 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 450


state 413

  151 Stmnt: '{' @27 sequence OS . '}'

    '}'  shift, and go to state 451


state 414

   57 body: '{' @9 sequence OS @10 '}' .

    $default  reduce using rule 57 (body)


state 415

  157 Stmnt: varref ASGN INAME @30 . l_par args r_par @31 Stmnt

    '('  shift, and go to state 58

    l_par  go to state 452


state 416

  264 rarg: EVAL . l_par expr r_par

    '('  shift, and go to state 58

    l_par  go to state 453


state 417

  265 rarg: CONST .

    $default  reduce using rule 265 (rarg)


state 418

  266 rarg: '-' . CONST

    CONST  shift, and go to state 454


state 419

  270 rargs: l_par . rargs r_par

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 455


state 420

  263 rarg: varref .

    $default  reduce using rule 263 (rarg)


state 421

  267 rargs: rarg .
  268      | rarg . ',' rargs
  269      | rarg . l_par rargs r_par

    '('  shift, and go to state 58
    ','  shift, and go to state 456

    $default  reduce using rule 267 (rargs)

    l_par  go to state 457


state 422

  137 Stmnt: varref R_RCV @21 rargs .

    $default  reduce using rule 137 (Stmnt)


state 423

  141 Stmnt: varref R_RCV @23 LT . rargs GT

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 458


state 424

  110 Special: varref RCV @15 rargs .

    $default  reduce using rule 110 (Special)


state 425

  139 Stmnt: varref RCV @22 LT . rargs GT

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 459


state 426

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  260 margs: expr . l_par arg r_par
  261 arg: expr .
  262    | expr . ',' arg

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    '('         shift, and go to state 58
    ','         shift, and go to state 235

    $default  reduce using rule 261 (arg)

    l_par  go to state 460


state 427

  143 Stmnt: varref O_SND @24 margs .

    $default  reduce using rule 143 (Stmnt)


state 428

  259 margs: arg .

    $default  reduce using rule 259 (margs)


state 429

  112 Special: varref SND @16 margs .

    $default  reduce using rule 112 (Special)


state 430

   66 step: stmnt UNLESS @11 stmnt .

    $default  reduce using rule 66 (step)


state 431

  116 Special: for_pre IN varref r_par . @18 for_post

    $default  reduce using rule 115 (@18)

    @18  go to state 461


state 432

  114 Special: for_pre ':' expr DOTDOT . expr r_par @17 for_post

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 462
    ltl_expr  go to state 130


state 433

   19 proc: inst proctype NAME @1 l_par decl r_par @2 . Opt_priority Opt_enabler body

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 222 (Opt_priority)

    Opt_priority  go to state 463


state 434

   91 ch_init: '[' const_expr ']' OF . '{' typ_list '}'

    '{'  shift, and go to state 464


state 435

   86 c_list: CONST ',' c_list .

    $default  reduce using rule 86 (c_list)


state 436

  203 expr: RUN aname @33 l_par args . r_par Opt_priority

    ')'  shift, and go to state 133

    r_par  go to state 465


state 437

   99 pfld: NAME @12 '[' expr ']' .

    $default  reduce using rule 99 (pfld)


state 438

  218 expr: PNAME '[' expr ']' ':' . pfld

    NAME  shift, and go to state 116

    pfld  go to state 466


state 439

  217 expr: PNAME '[' expr ']' '@' . NAME

    NAME  shift, and go to state 467


state 440

  201 expr: l_par expr ARROW expr ':' . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 468
    ltl_expr  go to state 130


state 441

  210 expr: varref R_RCV @35 '[' rargs . ']'

    ']'  shift, and go to state 469


state 442

  208 expr: varref RCV @34 '[' rargs . ']'

    ']'  shift, and go to state 470


state 443

  258 prargs: ',' . arg

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 471


state 444

  131 Stmnt: PRINT l_par STRING @20 prargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 472


state 445

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  254 two_args: expr ',' expr .

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234

    $default  reduce using rule 254 (two_args)


state 446

  162 option: SEP @32 sequence OS .

    $default  reduce using rule 162 (option)


state 447

  117 Special: SELECT l_par varref ':' expr . DOTDOT expr r_par
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    DOTDOT      shift, and go to state 473
    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234


state 448

  147 Stmnt: ATOMIC '{' @25 sequence OS . '}'

    '}'  shift, and go to state 474


state 449

  149 Stmnt: D_STEP '{' @26 sequence OS . '}'

    '}'  shift, and go to state 475


state 450

  154 Stmnt: INAME @28 l_par args r_par . @29 Stmnt

    $default  reduce using rule 153 (@29)

    @29  go to state 476


state 451

  151 Stmnt: '{' @27 sequence OS '}' .

    $default  reduce using rule 151 (Stmnt)


state 452

  157 Stmnt: varref ASGN INAME @30 l_par . args r_par @31 Stmnt

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    $default  reduce using rule 255 (args)

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    args      go to state 477
    arg       go to state 132


state 453

  264 rarg: EVAL l_par . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 478
    ltl_expr  go to state 130


state 454

  266 rarg: '-' CONST .

    $default  reduce using rule 266 (rarg)


state 455

  270 rargs: l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 479


state 456

  268 rargs: rarg ',' . rargs

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 480


state 457

  269 rargs: rarg l_par . rargs r_par

    EVAL   shift, and go to state 416
    CONST  shift, and go to state 417
    NAME   shift, and go to state 116
    '-'    shift, and go to state 418
    '('    shift, and go to state 58

    l_par   go to state 419
    varref  go to state 420
    pfld    go to state 127
    cmpnd   go to state 128
    rarg    go to state 421
    rargs   go to state 481


state 458

  141 Stmnt: varref R_RCV @23 LT rargs . GT

    GT  shift, and go to state 482


state 459

  139 Stmnt: varref RCV @22 LT rargs . GT

    GT  shift, and go to state 483


state 460

  260 margs: expr l_par . arg r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 129
    ltl_expr  go to state 130
    arg       go to state 484


state 461

  116 Special: for_pre IN varref r_par @18 . for_post

    '{'  shift, and go to state 485

    for_post  go to state 486


state 462

  114 Special: for_pre ':' expr DOTDOT expr . r_par @17 for_post
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 487


state 463

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority . Opt_enabler body

    PROVIDED  shift, and go to state 488

    $default  reduce using rule 246 (Opt_enabler)

    Opt_enabler  go to state 489


state 464

   91 ch_init: '[' const_expr ']' OF '{' . typ_list '}'

    error  shift, and go to state 490
    TYPE   shift, and go to state 491
    UNAME  shift, and go to state 492

    basetype  go to state 493
    typ_list  go to state 494


state 465

  203 expr: RUN aname @33 l_par args r_par . Opt_priority

    PRIORITY  shift, and go to state 68

    $default  reduce using rule 222 (Opt_priority)

    Opt_priority  go to state 495


state 466

  218 expr: PNAME '[' expr ']' ':' pfld .

    $default  reduce using rule 218 (expr)


state 467

  217 expr: PNAME '[' expr ']' '@' NAME .

    $default  reduce using rule 217 (expr)


state 468

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  201     | l_par expr ARROW expr ':' expr . r_par
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 496


state 469

  210 expr: varref R_RCV @35 '[' rargs ']' .

    $default  reduce using rule 210 (expr)


state 470

  208 expr: varref RCV @34 '[' rargs ']' .

    $default  reduce using rule 208 (expr)


state 471

  258 prargs: ',' arg .

    $default  reduce using rule 258 (prargs)


state 472

  131 Stmnt: PRINT l_par STRING @20 prargs r_par .

    $default  reduce using rule 131 (Stmnt)


state 473

  117 Special: SELECT l_par varref ':' expr DOTDOT . expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par     go to state 124
    cexpr     go to state 125
    varref    go to state 126
    pfld      go to state 127
    cmpnd     go to state 128
    expr      go to state 497
    ltl_expr  go to state 130


state 474

  147 Stmnt: ATOMIC '{' @25 sequence OS '}' .

    $default  reduce using rule 147 (Stmnt)


state 475

  149 Stmnt: D_STEP '{' @26 sequence OS '}' .

    $default  reduce using rule 149 (Stmnt)


state 476

  154 Stmnt: INAME @28 l_par args r_par @29 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 498
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 499
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 477

  157 Stmnt: varref ASGN INAME @30 l_par args . r_par @31 Stmnt

    ')'  shift, and go to state 133

    r_par  go to state 500


state 478

  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr
  264 rarg: EVAL l_par expr . r_par

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 501


state 479

  270 rargs: l_par rargs r_par .

    $default  reduce using rule 270 (rargs)


state 480

  268 rargs: rarg ',' rargs .

    $default  reduce using rule 268 (rargs)


state 481

  269 rargs: rarg l_par rargs . r_par

    ')'  shift, and go to state 133

    r_par  go to state 502


state 482

  141 Stmnt: varref R_RCV @23 LT rargs GT .

    $default  reduce using rule 141 (Stmnt)


state 483

  139 Stmnt: varref RCV @22 LT rargs GT .

    $default  reduce using rule 139 (Stmnt)


state 484

  260 margs: expr l_par arg . r_par

    ')'  shift, and go to state 133

    r_par  go to state 503


state 485

  108 for_post: '{' . sequence OS '}'

    error        shift, and go to state 140
    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    GOTO         shift, and go to state 146
    BREAK        shift, and go to state 147
    ELSE         shift, and go to state 148
    IF           shift, and go to state 149
    DO           shift, and go to state 150
    FOR          shift, and go to state 151
    SELECT       shift, and go to state 152
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    HIDDEN       shift, and go to state 11
    SHOW         shift, and go to state 12
    ISLOCAL      shift, and go to state 13
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    XU           shift, and go to state 159
    NAME         shift, and go to state 160
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    TYPE   reduce using rule 68 (vis)
    UNAME  reduce using rule 68 (vis)

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    sequence   go to state 504
    step       go to state 166
    vis        go to state 32
    one_decl   go to state 167
    varref     go to state 168
    pfld       go to state 127
    cmpnd      go to state 128
    stmnt      go to state 169
    for_pre    go to state 170
    Special    go to state 171
    Stmnt      go to state 172
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 486

  116 Special: for_pre IN varref r_par @18 for_post .

    $default  reduce using rule 116 (Special)


state 487

  114 Special: for_pre ':' expr DOTDOT expr r_par . @17 for_post

    $default  reduce using rule 113 (@17)

    @17  go to state 505


state 488

  247 Opt_enabler: PROVIDED . l_par full_expr r_par
  248            | PROVIDED . error

    error  shift, and go to state 506
    '('    shift, and go to state 58

    l_par  go to state 507


state 489

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler . body

    '{'  shift, and go to state 66

    body  go to state 508


state 490

  251 basetype: error .

    $default  reduce using rule 251 (basetype)


state 491

  249 basetype: TYPE .

    $default  reduce using rule 249 (basetype)


state 492

  250 basetype: UNAME .

    $default  reduce using rule 250 (basetype)


state 493

  252 typ_list: basetype .
  253         | basetype . ',' typ_list

    ','  shift, and go to state 509

    $default  reduce using rule 252 (typ_list)


state 494

   91 ch_init: '[' const_expr ']' OF '{' typ_list . '}'

    '}'  shift, and go to state 510


state 495

  203 expr: RUN aname @33 l_par args r_par Opt_priority .

    $default  reduce using rule 203 (expr)


state 496

  201 expr: l_par expr ARROW expr ':' expr r_par .

    $default  reduce using rule 201 (expr)


state 497

  117 Special: SELECT l_par varref ':' expr DOTDOT expr . r_par
  180 expr: expr . '+' expr
  181     | expr . '-' expr
  182     | expr . '*' expr
  183     | expr . '/' expr
  184     | expr . '%' expr
  185     | expr . '&' expr
  186     | expr . '^' expr
  187     | expr . '|' expr
  188     | expr . GT expr
  189     | expr . LT expr
  190     | expr . GE expr
  191     | expr . LE expr
  192     | expr . EQ expr
  193     | expr . NE expr
  194     | expr . AND expr
  195     | expr . OR expr
  196     | expr . LSHIFT expr
  197     | expr . RSHIFT expr
  226 ltl_expr: expr . UNTIL expr
  227         | expr . RELEASE expr
  228         | expr . WEAK_UNTIL expr
  229         | expr . IMPLIES expr
  230         | expr . EQUIV expr

    EQUIV       shift, and go to state 212
    IMPLIES     shift, and go to state 213
    OR          shift, and go to state 214
    AND         shift, and go to state 215
    RELEASE     shift, and go to state 216
    WEAK_UNTIL  shift, and go to state 217
    UNTIL       shift, and go to state 218
    '|'         shift, and go to state 219
    '^'         shift, and go to state 220
    '&'         shift, and go to state 221
    NE          shift, and go to state 222
    EQ          shift, and go to state 223
    LE          shift, and go to state 224
    GE          shift, and go to state 225
    LT          shift, and go to state 226
    GT          shift, and go to state 227
    RSHIFT      shift, and go to state 228
    LSHIFT      shift, and go to state 229
    '+'         shift, and go to state 230
    '-'         shift, and go to state 231
    '*'         shift, and go to state 232
    '/'         shift, and go to state 233
    '%'         shift, and go to state 234
    ')'         shift, and go to state 133

    r_par  go to state 511


state 498

  126 Stmnt: varref . ASGN full_expr
  127      | varref . INCR
  128      | varref . DECR
  137      | varref . R_RCV @21 rargs
  139      | varref . RCV @22 LT rargs GT
  141      | varref . R_RCV @23 LT rargs GT
  143      | varref . O_SND @24 margs
  157      | varref . ASGN INAME @30 l_par args r_par @31 Stmnt
  208 expr: varref . RCV @34 '[' rargs ']'
  210     | varref . R_RCV @35 '[' rargs ']'
  211     | varref .

    ASGN   shift, and go to state 265
    R_RCV  shift, and go to state 266
    RCV    shift, and go to state 512
    O_SND  shift, and go to state 268
    DECR   shift, and go to state 270
    INCR   shift, and go to state 271

    $default  reduce using rule 211 (expr)


state 499

  154 Stmnt: INAME @28 l_par args r_par @29 Stmnt .

    $default  reduce using rule 154 (Stmnt)


state 500

  157 Stmnt: varref ASGN INAME @30 l_par args r_par . @31 Stmnt

    $default  reduce using rule 156 (@31)

    @31  go to state 513


state 501

  264 rarg: EVAL l_par expr r_par .

    $default  reduce using rule 264 (rarg)


state 502

  269 rargs: rarg l_par rargs r_par .

    $default  reduce using rule 269 (rargs)


state 503

  260 margs: expr l_par arg r_par .

    $default  reduce using rule 260 (margs)


state 504

   59 sequence: sequence . MS step
  108 for_post: '{' sequence . OS '}'

    SEMI   shift, and go to state 8
    ARROW  shift, and go to state 9

    $default  reduce using rule 163 (OS)

    OS    go to state 514
    semi  go to state 263
    MS    go to state 264


state 505

  114 Special: for_pre ':' expr DOTDOT expr r_par @17 . for_post

    '{'  shift, and go to state 485

    for_post  go to state 515


state 506

  248 Opt_enabler: PROVIDED error .

    $default  reduce using rule 248 (Opt_enabler)


state 507

  247 Opt_enabler: PROVIDED l_par . full_expr r_par

    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58

    l_par      go to state 163
    cexpr      go to state 125
    varref     go to state 126
    pfld       go to state 127
    cmpnd      go to state 128
    expr       go to state 173
    full_expr  go to state 516
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 508

   19 proc: inst proctype NAME @1 l_par decl r_par @2 Opt_priority Opt_enabler body .

    $default  reduce using rule 19 (proc)


state 509

  253 typ_list: basetype ',' . typ_list

    error  shift, and go to state 490
    TYPE   shift, and go to state 491
    UNAME  shift, and go to state 492

    basetype  go to state 493
    typ_list  go to state 517


state 510

   91 ch_init: '[' const_expr ']' OF '{' typ_list '}' .

    $default  reduce using rule 91 (ch_init)


state 511

  117 Special: SELECT l_par varref ':' expr DOTDOT expr r_par .

    $default  reduce using rule 117 (Special)


state 512

  139 Stmnt: varref RCV . @22 LT rargs GT
  208 expr: varref RCV . @34 '[' rargs ']'

    '['       reduce using rule 207 (@34)
    $default  reduce using rule 138 (@22)

    @22  go to state 365
    @34  go to state 304


state 513

  157 Stmnt: varref ASGN INAME @30 l_par args r_par @31 . Stmnt

    ASSERT       shift, and go to state 141
    PRINT        shift, and go to state 142
    PRINTM       shift, and go to state 143
    C_CODE       shift, and go to state 2
    C_DECL       shift, and go to state 3
    C_EXPR       shift, and go to state 107
    RUN          shift, and go to state 108
    LEN          shift, and go to state 109
    ENABLED      shift, and go to state 110
    SET_P        shift, and go to state 144
    GET_P        shift, and go to state 111
    PC_VAL       shift, and go to state 112
    RETURN       shift, and go to state 145
    ELSE         shift, and go to state 148
    ATOMIC       shift, and go to state 153
    D_STEP       shift, and go to state 154
    TIMEOUT      shift, and go to state 113
    NONPROGRESS  shift, and go to state 114
    FULL         shift, and go to state 155
    EMPTY        shift, and go to state 156
    NFULL        shift, and go to state 157
    NEMPTY       shift, and go to state 158
    CONST        shift, and go to state 115
    NAME         shift, and go to state 116
    PNAME        shift, and go to state 117
    INAME        shift, and go to state 161
    SND          shift, and go to state 118
    EVENTUALLY   shift, and go to state 119
    ALWAYS       shift, and go to state 120
    NEXT         shift, and go to state 121
    '-'          shift, and go to state 122
    '~'          shift, and go to state 123
    '('          shift, and go to state 58
    '{'          shift, and go to state 162

    l_par      go to state 163
    ccode      go to state 164
    cexpr      go to state 125
    varref     go to state 498
    pfld       go to state 127
    cmpnd      go to state 128
    Stmnt      go to state 518
    expr       go to state 173
    full_expr  go to state 174
    ltl_expr   go to state 130
    Expr       go to state 175
    Probe      go to state 176


state 514

  108 for_post: '{' sequence OS . '}'

    '}'  shift, and go to state 519


state 515

  114 Special: for_pre ':' expr DOTDOT expr r_par @17 for_post .

    $default  reduce using rule 114 (Special)


state 516

  247 Opt_enabler: PROVIDED l_par full_expr . r_par

    ')'  shift, and go to state 133

    r_par  go to state 520


state 517

  253 typ_list: basetype ',' typ_list .

    $default  reduce using rule 253 (typ_list)


state 518

  157 Stmnt: varref ASGN INAME @30 l_par args r_par @31 Stmnt .

    $default  reduce using rule 157 (Stmnt)


state 519

  108 for_post: '{' sequence OS '}' .

    $default  reduce using rule 108 (for_post)


state 520

  247 Opt_enabler: PROVIDED l_par full_expr r_par .

    $default  reduce using rule 247 (Opt_enabler)
